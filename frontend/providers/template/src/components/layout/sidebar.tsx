import { Box, Flex, Icon, Text } from '@chakra-ui/react';
import { useTranslation } from 'next-i18next';
import { useRouter } from 'next/router';
import { ReactElement } from 'react';

export type SideBarMenu = {
  id: string;
  url: string;
  acriveUrl: string[];
  value: string;
  icon: ReactElement;
  display: boolean;
  showLayout: boolean;
};

const menus: SideBarMenu[] = [
  {
    id: 'Applications',
    url: '/',
    acriveUrl: ['/', '/deploy', '/store/add', '/store/edit'],
    value: 'SideBar.Applications',
    icon: (
      <path d="M2 3H9.425V10.425H2V3ZM3.65 4.65V8.775H7.775V4.65H3.65ZM14.7875 4.65C14.2405 4.65 13.7159 4.8673 13.3291 5.25409C12.9423 5.64089 12.725 6.16549 12.725 6.7125C12.725 7.25951 12.9423 7.78411 13.3291 8.17091C13.7159 8.5577 14.2405 8.775 14.7875 8.775C15.3345 8.775 15.8591 8.5577 16.2459 8.17091C16.6327 7.78411 16.85 7.25951 16.85 6.7125C16.85 6.16549 16.6327 5.64089 16.2459 5.25409C15.8591 4.8673 15.3345 4.65 14.7875 4.65ZM11.075 6.7125C11.075 6.22497 11.171 5.74221 11.3576 5.29179C11.5442 4.84137 11.8176 4.4321 12.1624 4.08737C12.5071 3.74263 12.9164 3.46917 13.3668 3.2826C13.8172 3.09603 14.3 3 14.7875 3C15.275 3 15.7578 3.09603 16.2082 3.2826C16.6586 3.46917 17.0679 3.74263 17.4126 4.08737C17.7574 4.4321 18.0308 4.84137 18.2174 5.29179C18.404 5.74221 18.5 6.22497 18.5 6.7125C18.5 7.69712 18.1089 8.6414 17.4126 9.33763C16.7164 10.0339 15.7721 10.425 14.7875 10.425C13.8029 10.425 12.8586 10.0339 12.1624 9.33763C11.4661 8.6414 11.075 7.69712 11.075 6.7125ZM2 12.075H9.425V19.5H2V12.075ZM3.65 13.725V17.85H7.775V13.725H3.65ZM11.075 12.075H18.5V19.5H11.075V12.075ZM12.725 13.725V17.85H16.85V13.725H12.725Z" />
    ),
    display: true,
    showLayout: true
  },
  {
    id: 'MyApp',
    url: '/app',
    value: 'SideBar.My App',
    acriveUrl: ['/app'],
    icon: (
      <path d="M10.3 2C11.4006 2 12.4562 2.43723 13.2345 3.21551C14.0128 3.99378 14.45 5.04935 14.45 6.15C14.45 7.25065 14.0128 8.30622 13.2345 9.08449C12.4562 9.86277 11.4006 10.3 10.3 10.3C9.19935 10.3 8.14378 9.86277 7.36551 9.08449C6.58723 8.30622 6.15 7.25065 6.15 6.15C6.15 5.04935 6.58723 3.99378 7.36551 3.21551C8.14378 2.43723 9.19935 2 10.3 2ZM10.3 4.075C9.74968 4.075 9.22189 4.29362 8.83275 4.68275C8.44362 5.07189 8.225 5.59968 8.225 6.15C8.225 6.70032 8.44362 7.22811 8.83275 7.61725C9.22189 8.00638 9.74968 8.225 10.3 8.225C10.8503 8.225 11.3781 8.00638 11.7672 7.61725C12.1564 7.22811 12.375 6.70032 12.375 6.15C12.375 5.59968 12.1564 5.07189 11.7672 4.68275C11.3781 4.29362 10.8503 4.075 10.3 4.075ZM10.3 11.3375C13.0701 11.3375 18.6 12.7174 18.6 15.4875V18.6H2V15.4875C2 12.7174 7.52988 11.3375 10.3 11.3375ZM10.3 13.3088C7.21863 13.3088 3.97125 14.8235 3.97125 15.4875V16.6288H16.6288V15.4875C16.6288 14.8235 13.3814 13.3088 10.3 13.3088Z" />
    ),
    display: true,
    showLayout: true
  }, 
  // {
  //   id: 'Setting',
  //   url: '/setting',
  //   value: 'SideBar.Setting',
  //   acriveUrl: ['/setting'],
  //   icon: (
  //     <path d="M13.7663 8.94009C13.6594 8.81843 13.6004 8.66203 13.6004 8.50009C13.6004 8.33815 13.6594 8.18175 13.7663 8.06009L14.6196 7.10009C14.7136 6.99521 14.772 6.86323 14.7864 6.7231C14.8008 6.58297 14.7704 6.44188 14.6996 6.32009L13.3663 4.01343C13.2962 3.89177 13.1895 3.79534 13.0614 3.73788C12.9333 3.68042 12.7904 3.66487 12.6529 3.69343L11.3996 3.94676C11.2401 3.97971 11.0741 3.95315 10.9329 3.87209C10.7916 3.79103 10.6849 3.66108 10.6329 3.50676L10.2263 2.28676C10.1815 2.15435 10.0963 2.03934 9.98269 1.95799C9.86904 1.87664 9.7327 1.83307 9.59294 1.83343H6.92627C6.78089 1.82584 6.63703 1.86604 6.51665 1.9479C6.39627 2.02976 6.30599 2.14877 6.2596 2.28676L5.88627 3.50676C5.83427 3.66108 5.72759 3.79103 5.58635 3.87209C5.44511 3.95315 5.27908 3.97971 5.1196 3.94676L3.83294 3.69343C3.70264 3.67501 3.56981 3.69557 3.45117 3.75252C3.33254 3.80946 3.23341 3.90025 3.16627 4.01343L1.83294 6.32009C1.76038 6.44053 1.72775 6.58082 1.73973 6.72091C1.7517 6.861 1.80766 6.99372 1.89961 7.10009L2.74627 8.06009C2.85315 8.18175 2.91209 8.33815 2.91209 8.50009C2.91209 8.66203 2.85315 8.81843 2.74627 8.94009L1.89961 9.90009C1.80766 10.0065 1.7517 10.1392 1.73973 10.2793C1.72775 10.4194 1.76038 10.5597 1.83294 10.6801L3.16627 12.9868C3.23634 13.1084 3.34302 13.2048 3.47111 13.2623C3.5992 13.3198 3.74215 13.3353 3.87961 13.3068L5.13294 13.0534C5.29242 13.0205 5.45844 13.047 5.59968 13.1281C5.74092 13.2092 5.84761 13.3391 5.89961 13.4934L6.30627 14.7134C6.35266 14.8514 6.44294 14.9704 6.56332 15.0523C6.6837 15.1341 6.82756 15.1743 6.97294 15.1668H9.6396C9.77937 15.1671 9.91571 15.1235 10.0294 15.0422C10.143 14.9609 10.2282 14.8458 10.2729 14.7134L10.6796 13.4934C10.7316 13.3391 10.8383 13.2092 10.9795 13.1281C11.1208 13.047 11.2868 13.0205 11.4463 13.0534L12.6996 13.3068C12.8371 13.3353 12.98 13.3198 13.1081 13.2623C13.2362 13.2048 13.3429 13.1084 13.4129 12.9868L14.7463 10.6801C14.8171 10.5583 14.8474 10.4172 14.8331 10.2771C14.8187 10.137 14.7603 10.005 14.6663 9.90009L13.7663 8.94009ZM12.7729 9.83343L13.3063 10.4334L12.4529 11.9134L11.6663 11.7534C11.1861 11.6553 10.6867 11.7368 10.2627 11.9826C9.83868 12.2284 9.5197 12.6213 9.36627 13.0868L9.11294 13.8334H7.40627L7.16627 13.0734C7.01284 12.608 6.69386 12.2151 6.26988 11.9693C5.84589 11.7235 5.34642 11.6419 4.86627 11.7401L4.07961 11.9001L3.21294 10.4268L3.74627 9.82676C4.07424 9.46008 4.25556 8.98538 4.25556 8.49343C4.25556 8.00147 4.07424 7.52677 3.74627 7.16009L3.21294 6.56009L4.06627 5.09343L4.85294 5.25343C5.33309 5.35157 5.83256 5.27001 6.25654 5.02423C6.68053 4.77844 6.99951 4.38553 7.15294 3.92009L7.40627 3.16676H9.11294L9.36627 3.92676C9.5197 4.3922 9.83868 4.7851 10.2627 5.03089C10.6867 5.27668 11.1861 5.35824 11.6663 5.26009L12.4529 5.10009L13.3063 6.58009L12.7729 7.18009C12.4486 7.54593 12.2696 8.01788 12.2696 8.50676C12.2696 8.99564 12.4486 9.46759 12.7729 9.83343ZM8.2596 5.83343C7.73219 5.83343 7.21662 5.98982 6.77808 6.28284C6.33955 6.57586 5.99776 6.99233 5.79593 7.4796C5.59409 7.96687 5.54128 8.50305 5.64418 9.02033C5.74707 9.53762 6.00105 10.0128 6.37399 10.3857C6.74693 10.7587 7.22208 11.0126 7.73936 11.1155C8.25665 11.2184 8.79282 11.1656 9.28009 10.9638C9.76736 10.7619 10.1838 10.4201 10.4769 9.98161C10.7699 9.54308 10.9263 9.02751 10.9263 8.50009C10.9263 7.79285 10.6453 7.11457 10.1452 6.61448C9.64513 6.11438 8.96685 5.83343 8.2596 5.83343ZM8.2596 9.83343C7.9959 9.83343 7.73811 9.75523 7.51884 9.60872C7.29958 9.46221 7.12868 9.25397 7.02777 9.01034C6.92685 8.7667 6.90044 8.49861 6.95189 8.23997C7.00334 7.98133 7.13033 7.74375 7.3168 7.55728C7.50327 7.37081 7.74084 7.24383 7.99948 7.19238C8.25813 7.14093 8.52621 7.16734 8.76985 7.26825C9.01348 7.36917 9.22172 7.54007 9.36823 7.75933C9.51474 7.9786 9.59294 8.23639 9.59294 8.50009C9.59294 8.85372 9.45246 9.19285 9.20241 9.4429C8.95237 9.69295 8.61323 9.83343 8.2596 9.83343Z"/>
  //   ),
  //   display: true,
  //   showLayout: true
  // }
];

export default function SideBar({ isMobile }: { isMobile: boolean }) {
  const router = useRouter();
  const { t, ready } = useTranslation();

  return (
    <Flex flexDirection="column" mt="8px">
      {menus &&
        menus
          .filter((item) => item.display)
          .map((item) => {
            return (
              <Flex
                borderRadius={'4px'}
                background={
                  item.acriveUrl.includes(router.pathname) ? 'rgba(150, 153, 180, 0.15)' : ''
                }
                _hover={{
                  background: 'rgba(150, 153, 180, 0.10)'
                }}
                key={item.id}
                mt="8px"
                p="12px"
                h="44px"
                alignItems={'center'}
                as={'button'}
                onClick={() => {
                  router.push(item.url);
                }}
              >
                <Icon
                  flexShrink={0}
                  w="18px"
                  h="18px"
                  fill={item.acriveUrl.includes(router.route) ? '#219BF4' : '#485058'}
                  viewBox={item.id === 'Setting' ? '0 0 15 15': '0 0 20 21'}
                  alignItems={'center'}
                >
                  {item.icon}
                </Icon>
                {!isMobile && (
                  <Text
                    ml="10px"
                    color={item.acriveUrl.includes(router.route) ? '#219BF4' : '#485058'}
                    fontSize={'16px'}
                    fontWeight={500}
                  >
                    {t(item.value)}
                  </Text>
                )}
              </Flex>
            );
          })}
    </Flex>
  );
}
